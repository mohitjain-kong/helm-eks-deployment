# Basic configuration for Kong Enterprise as a hybrid mode data plane node.
# It depends on the presence of a control plane release, as shown in
# https://github.com/Kong/charts/blob/main/charts/kong/example-values/minimal-kong-enterprise-hybrid-control.yaml
#
# The "env.cluster_control_plane" value must be changed to your control plane
# instance's cluster Service hostname. Search "CHANGEME" to find it in this
# example.
#
# Hybrid mode requires a certificate. See https://github.com/Kong/charts/blob/main/charts/kong/README.md#certificates
# to create one.
image:
  repository: kong/kong-gateway
  tag: "latest"
env:
  role: data_plane
  cluster_control_plane: kong-hybrid-cp-kong-cluster.kong-hybrid-cp.svc.cluster.local:8005
  cluster_telemetry_endpoint: kong-hybrid-cp-kong-clustertelemetry.kong-hybrid-cp.svc.cluster.local:8006 # Enterprise-only
  lua_ssl_trusted_certificate: /etc/secrets/kong-cluster-cert/tls.crt
  cluster_cert: /etc/secrets/kong-cluster-cert/tls.crt
  cluster_cert_key: /etc/secrets/kong-cluster-cert/tls.key
  # client_ssl: "on"
  # client_ssl_cert: /etc/secrets/kong-cluster-cert-upstream/tls.crt
  # client_ssl_cert_key: /etc/secrets/kong-cluster-cert-upstream/tls.key
  # lua_ssl_trusted_certifcate: /etc/secrets/kong-cluster-cert-upstream/tls.crt
  proxy_url:  http://1.2.3.4

proxy:
  enabled: true
  type: LoadBalancer

manager:
  enabled: false
  type: LoadBalancer
  http:
    enabled: true
    servicePort: 8002
    containerPort: 8002

secretVolumes:
  - kong-cluster-cert
  - kong-cluster-cert-upstream

ingressController:
  enabled: false

enterprise:
  enabled: false
  # See instructions regarding enterprise licenses at https://github.com/Kong/charts/blob/master/charts/kong/README.md#kong-enterprise-license
  # license_secret: kong-enterprise-license # CHANGEME
  # To sync vitals with control plane, please deploy license into control plane using Admin API. Please follow https://docs.konghq.com/gateway/2.8.x/plan-and-deploy/licenses/deploy-license/#deploy-the-license
  vitals:
    enabled: false
portal:
  enabled: false
portalapi:
  enabled: false
  
# For datadog
# proxy is the name of the container in the pod that we want to
# run against.
# podAnnotations:
#   ad.datadoghq.com/proxy.check_names: "[\"kong\"]"
#   ad.datadoghq.com/proxy.init_configs: "[{}]"
#   ad.datadoghq.com/proxy.instances: "[{\"kong_status_url\": \"http://adf98f6884c634098b8b99230d1bc023-809056493.eu-west-2.elb.amazonaws.com:8001/status/\"}]"
#   ad.datadoghq.com/proxy.logs: "[{\"source\":\"kong\",\"service\":\"kong-hybrid-dp-kong\"}]"