apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-enterprise-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: kong-enterprise-test
      app.kubernetes.io/name: kong-enterprise-test
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: kong-enterprise-test
        app.kubernetes.io/component: app
        app.kubernetes.io/instance: kong-enterprise-test
        app.kubernetes.io/name: kong-enterprise-test
      annotations:
        kuma.io/gateway: enabled
        prometheus.io/port: '8100'
        prometheus.io/scrape: 'true'
        traffic.sidecar.istio.io/includeInboundPorts: ''
    spec:
      containers:
        - name: proxy
          image: kong/kong-gateway:2.8.1.2-alpine
          ports:
            - name: admin
              containerPort: 8001
              protocol: TCP
            - name: admin-tls
              containerPort: 8444
              protocol: TCP
            - name: proxy
              containerPort: 8000
              protocol: TCP
            - name: proxy-tls
              containerPort: 8443
              protocol: TCP
            - name: status
              containerPort: 8100
              protocol: TCP
          env:
            - name: KONG_ADMIN_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_ADMIN_API_URI
              value: http://admin.service-connectivity.com
            - name: KONG_ADMIN_ERROR_LOG
              value: /dev/stderr
            - name: KONG_ADMIN_GUI_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_ADMIN_GUI_ERROR_LOG
              value: /dev/stderr
            - name: KONG_ADMIN_LISTEN
              value: 0.0.0.0:8001, 0.0.0.0:8444 http2 ssl
            - name: KONG_CLUSTER_LISTEN
              value: 'off'
            - name: KONG_CLUSTER_TELEMETRY_LISTEN
              value: 'off'
            - name: KONG_DATABASE
              value: postgres
            - name: KONG_ENFORCE_RBAC
              value: 'on'
            - name: KONG_KIC
              value: 'on'
            - name: KONG_LICENSE_DATA
              valueFrom:
                secretKeyRef:
                  name: kong-enterprise-license
                  key: license
            - name: KONG_LUA_PACKAGE_PATH
              value: /opt/?.lua;/opt/?/init.lua;;
            - name: KONG_NGINX_WORKER_PROCESSES
              value: '2'
            - name: KONG_ONTRUSTED_LUA
              value: 'true'
            - name: KONG_PASSWORD
              value: KongRul3z!
            - name: KONG_PG_DATABASE
              value: kongEnterprise
            - name: KONG_PG_HOST
              value: postgres.databases
            - name: KONG_PG_PASSWORD
              value: kong
            - name: KONG_PG_USER
              value: kong
            - name: KONG_PLUGINS
              value: bundled
            - name: KONG_PORTAL
              value: 'on'
            - name: KONG_PORTAL_API_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_PORTAL_API_ERROR_LOG
              value: /dev/stderr
            - name: KONG_PORT_MAPS
              value: 80:8000, 443:8443
            - name: KONG_PROXY_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_PROXY_ERROR_LOG
              value: /dev/stderr
            - name: KONG_PROXY_LISTEN
              value: 0.0.0.0:8000, 0.0.0.0:8443 http2 ssl
            - name: KONG_PROXY_URL
              value: http://proxy.test.service-connectivity.com
            - name: KONG_SMTP_MOCK
              value: 'on'
            - name: KONG_STATUS_LISTEN
              value: 0.0.0.0:8100
            - name: KONG_STREAM_LISTEN
              value: 'off'
            - name: KONG_NGINX_DAEMON
              value: 'off'
          resources: {}
          livenessProbe:
            httpGet:
              path: /status
              port: status
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /status
              port: status
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - '-c'
                  - /bin/sleep 15 && kong quit
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      automountServiceAccountToken: true
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
apiVersion: v1
kind: Service
metadata:
  name: kong-enterprise-test-proxy
  namespace: test
  labels:
    app.kubernetes.io/instance: kong-enterprise-test
  annotations:
    external-dns.alpha.kubernetes.io/hostname: proxy.test.service-connectivity.com
    ingress.kubernetes.io/service-upstream: 'true'
spec:
  ports:
    - name: kong-proxy
      protocol: TCP
      port: 80
      targetPort: 8000
    - name: kong-proxy-tls
      protocol: TCP
      port: 443
      targetPort: 8443
  selector:
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: kong-enterprise-test
    app.kubernetes.io/name: kong-enterprise-test
  type: ClusterIP


